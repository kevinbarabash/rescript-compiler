// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`patternMatching.js 1`] = `
"=====Parsetree==========================================
;;match expr with
=====Errors=============================================

File \\"/syntax/tests/parsing/errors/other/patternMatching.js\\", line 1, characters 13-15:


[31m1[0m â”‚  switch expr {
2 â”‚  }

Pattern matching needs at least one case



========================================================"
`;

exports[`spread.js 1`] = `
"=====Parsetree==========================================
let arr = [|x;y|]
let [|arr;_|] = [|1;2;3|]
let record = { x with y }
let { x; y } = myRecord
let myList = x :: y
let x::y = myList
=====Errors=============================================

File \\"/syntax/tests/parsing/errors/other/spread.js\\", line 1, characters 11-14:


[31m1[0m â”‚  let arr = [[31m...[0mx, ...y]
2 â”‚  let [...arr, _] = [1, 2, 3]
3 â”‚  

Arrays can't use the \`...\` spread currently. Please use \`concat\` or other Array helpers.


File \\"/syntax/tests/parsing/errors/other/spread.js\\", line 2, characters 5-8:


1 â”‚  let arr = [...x, ...y]
[31m2[0m â”‚  let [[31m...[0marr, _] = [1, 2, 3]
3 â”‚  
4 â”‚  let record = {...x, ...y}

Array's \`...\` spread is not supported in pattern matches.
Explanation: such spread would create a subarray; out of performance concern, our pattern matching currently guarantees to never create new intermediate data.
Solution: if it's to validate the first few elements, use a \`when\` clause + Array size check + \`get\` checks on the current pattern. If it's to obtain a subarray, use \`Array.sub\` or \`Belt.Array.slice\`.


File \\"/syntax/tests/parsing/errors/other/spread.js\\", line 4, characters 20-23:


2 â”‚  let [...arr, _] = [1, 2, 3]
3 â”‚  
[31m4[0m â”‚  let record = {...x, [31m...[0my}
5 â”‚  let {...x, ...y} = myRecord
6 â”‚  

Records can only have one \`...\` spread, at the beginning.
Explanation: since records have a known, fixed shape, a spread like \`{a, ...b}\` wouldn't make sense, as \`b\` would override every field of \`a\` anyway.


File \\"/syntax/tests/parsing/errors/other/spread.js\\", line 5, characters 14-18:


3 â”‚  
4 â”‚  let record = {...x, ...y}
[31m5[0m â”‚  let {...x, ...[31my} =[0m myRecord
6 â”‚  
7 â”‚  let myList = list{...x, ...y}

Record's \`...\` spread is not supported in pattern matches.
Explanation: you can't collect a subset of a record's field into its own record, since a record needs an explicit declaration and that subset wouldn't have one.
Solution: you need to pull out each field you want explicitly.


File \\"/syntax/tests/parsing/errors/other/spread.js\\", line 8, characters 19-20:


6 â”‚  
7 â”‚  let myList = list{...x, ...y}
[31m8[0m â”‚  let list{...x, ...y} = myList          
                         [31m^[0m

Did you forget a \`]\` here? 



========================================================"
`;
