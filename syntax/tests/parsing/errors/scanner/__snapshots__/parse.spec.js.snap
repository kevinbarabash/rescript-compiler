// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`escapeSequence.js 1`] = `
"=====Parsetree==========================================
let x = \\"\\\\\\\\0\\"
let x = \\"\\\\\\\\0AAA\\"
=====Errors=============================================

  Syntax error!
  parsing/errors/scanner/escapeSequence.js:1:10-11  
  1 │ let x = \\"\\\\0\\"
  2 │ 
  3 │ let x = \\"\\\\oAAA\\"
  
  unknown escape sequence


  Syntax error!
  parsing/errors/scanner/escapeSequence.js:3:10-11  
  1 │ let x = \\"\\\\0\\"
  2 │ 
  3 │ let x = \\"\\\\oAAA\\"
  4 │ 
  
  unknown escape sequence


========================================================"
`;

exports[`nativeint.res 1`] = `
"=====Parsetree==========================================
let nativeint = 3n
=====Errors=============================================

  Syntax error!
  parsing/errors/scanner/nativeint.res:1:18  
  1 │ let nativeint = 3n
  2 │ 
  
  Unsupported number type (nativeint). Did you mean \`3\`?


========================================================"
`;

exports[`oldDerefOp.js 1`] = `
"=====Parsetree==========================================
let newVelocity = velocity +. (a *. secondPerFrame)
let newX = x +. (newVelocity *. secondPerFrame)
=====Errors=============================================

  Syntax error!
  parsing/errors/scanner/oldDerefOp.js:1:50  
  1 │ let newVelocity = velocity +. a *. secondPerFrame^;
  2 │ let newX = x +. newVelocity *. secondPerFrame^;
  3 │ 
  
  Hmm, not sure what I should do here with this character.
If you're trying to deref an expression, use \`foo.contents\` instead.


  Syntax error!
  parsing/errors/scanner/oldDerefOp.js:2:46  
  1 │ let newVelocity = velocity +. a *. secondPerFrame^;
  2 │ let newX = x +. newVelocity *. secondPerFrame^;
  3 │ 
  
  Hmm, not sure what I should do here with this character.
If you're trying to deref an expression, use \`foo.contents\` instead.


========================================================"
`;

exports[`unclosedComment.js 1`] = `
"=====Parsetree==========================================

=====Errors=============================================

  Syntax error!
  parsing/errors/scanner/unclosedComment.js:1:3-3:0  
  1 │ /* eof
  2 │  * reached
  3 │ 
  
  This comment seems to be missing a closing \`*/\`


========================================================"
`;

exports[`unclosedString.js 1`] = `
"=====Parsetree==========================================
let z = \\"eof\\"
=====Errors=============================================

  Syntax error!
  parsing/errors/scanner/unclosedString.js:1:10-2:0  
  1 │ let z = \\"eof
  2 │ 
  
  This string is missing a double quote at the end


========================================================"
`;
